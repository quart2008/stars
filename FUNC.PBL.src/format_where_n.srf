$PBExportHeader$format_where_n.srf
global type format_where_n from function_object
end type

forward prototypes
global function string format_where_n (string in_string, string in_op)
end prototypes

global function string format_where_n (string in_string, string in_op);STRING s1, s2, s3, op, h1
LONG p1, p2, p3, p4, len1, len2
boolean eos

setpointer(hourglass!)

op = trim(in_op)
s1 = trim(in_string)
len1 = len(s1)
s2 = ''
s3 = ''

if s1 = '' then
   s1 = '! no item passed'
   RETURN s1
end if

p1 = pos(s1,' ')
if p1 > 0 then
   s1 = '! string contain spaces'
   RETURN s1
end if

CHOOSE CASE op

   CASE '>', '<', '>=', '<=', '=', '<>'
        eos = false
        p2 = 1
        p1 = pos(s1,',',p2)
        if p1 = 0 then
           len2 = len1 - p2 + 1
           s2 = mid(s1,p2,len2)
           if isnumber(s2) then
              p4 = 1
              p3 = pos(s2,'.',p4)
              if p3 = 0 then
                 s2 = s2 + '.0'
                 return s2
              else
                 return s2
              end if
           else
              s1 = '! item is not numeric'
              RETURN s1
           end if
        else
           s1 = '! too many items'
           RETURN s1
        end if
   CASE 'in', 'not in', 'IN', 'NOT IN'
        eos = false
        p2 = 1
        DO WHILE eos = false
           p1 = pos(s1,',',p2)
           if p1 = 0 then
              eos = true
              len2 = len1 - p2 + 1
              s2 = mid(s1,p2,len2)
              if isnumber(s2) then
                 p4 = 1
                 p3 = pos(s2,'.',p4)
                 if p3 = 0 then
                    s2 = s2 + '.0'                                  
                 end if
                 s3 = s3 + s2                 
                 exit
              else
                 s1 = '! item is not numeric'
                 RETURN s1
              end if
           end if
           len2 = p1 - p2
           s2 = mid(s1,p2,len2)
           if isnumber(s2) then
              p4 = 1
              p3 = pos(s2,'.',p4)
              if p3 = 0 then
                 s2 = s2 + '.0'                                  
              end if
              s3 = s3 + s2+','
           else
              eos = true
              s1 = '! item is not numeric'
              RETURN s1
           end if
           p2 = p1 + 1
        LOOP
        s3 = '( ' + s3 + ' )'
        return s3
   CASE 'between', 'BETWEEN'
        eos = false
        p2 = 1
// KTB - Tr2926 -STARCare
        p1 = pos(Upper(s1),'AND',p2)
		  if ( p1 > 0 ) then
			  RETURN s1
		  end if
// End KTB
        p1 = pos(s1,',',p2)
        if p1 = 0 then
           s1 = '! second item missing'
            RETURN s1
        end if
        len2 = p1 - p2
        s2 = mid(s1,p2,len2)
        if not isnumber(s2) then
           s1 = '! item is not numeric'
           RETURN s1
        end if
        p4 = 1
        p3 = pos(s2,'.',p4)
        if p3 = 0 then
           s2 = s2 + '.0'                                  
        end if              
        p2 = p1 + 1
        s3 = s2 + ' and '
        p2 = p1 + 1
        p1 = pos(s1,',',p2)
        if p1 > 0 then
           s1 = '! too many items passed'
           RETURN s1
        end if
        
        len2 = len1 - p2 + 1
        if len2 = 0 then
           s1 = '! second item missing'
           RETURN s1
        end if
        s2 = mid(s1,p2,len2)
        if not isnumber(s2) then
           s1 = '! item is not numeric'
           RETURN s1
        end if
        p4 = 1
        p3 = pos(s2,'.',p4)
        if p3 = 0 then
           s2 = s2 + '.0'                                  
        end if              
        s3 = s3 + s2
        return s3
   CASE ELSE
        s1 = '! invalid operator' 
END CHOOSE 
RETURN s1
end function

